import matplotlib.pyplot as plt
import matplotlib

# 设置全局字体为 Times New Roman
matplotlib.rcParams['font.family'] = 'Times New Roman'
matplotlib.rcParams['font.size'] = 16  # 同时设置字体大小

# 假设这是您的算法和对比算法的精度数据
# 精度值
accuracy_your_algorithm = [0.6871, 0.7721, 0.7721, 0.7868, 0.7868, 0.7868, 0.7868, 0.7868, 0.7868, 0.7868, 0.7868,
                           0.7868, 0.7868,
                           0.7868, 0.7868, 0.7929, 0.7946, 0.7956, 0.7956, 0.7987, 0.7998, 0.8013, 0.8013, 0.8013,
                           0.8013, 0.8102,
                           0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102,
                           0.8102, 0.8102,
                           0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102,
                           0.8102, 0.8102,
                           0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102,
                           0.8102, 0.8102,
                           0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102,
                           0.8102, 0.8102,
                           0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102,
                           0.8102, 0.8102,
                           0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102, 0.8102]

accuracy_comparison_algorithm = [0.5132, 0.6429, 0.7586, 0.7755, 0.7859, 0.7882, 0.7882, 0.7882, 0.7882, 0.7882, 0.7992,
                                 0.7992,
                                 0.7992, 0.7992, 0.7992, 0.7992, 0.7992, 0.7992, 0.7992, 0.7992, 0.7992, 0.7992, 0.7992,
                                 0.7993,
                                 0.7993, 0.7993, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041,
                                 0.8041,
                                 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041,
                                 0.8041,
                                 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041, 0.8041,
                                 0.8041,
                                 0.8041, 0.8041, 0.8041, 0.8088, 0.8088, 0.8088, 0.8088, 0.81, 0.81, 0.81, 0.81, 0.81,
                                 0.81, 0.81,
                                 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81,
                                 0.81, 0.81, 0.81,
                                 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81]

# 测试次数或版本号
tests = range(1, len(accuracy_your_algorithm) + 1)

# 创建折线图
plt.plot(tests[:70:5], accuracy_your_algorithm[:70:5], marker='o', label='With dynamic adjustment')  # 绘制您的算法精度折线图
plt.plot(tests[:70:5], accuracy_comparison_algorithm[:70:5], marker='s',
         label='Without dynamic adjustment')  # 绘制对比算法精度折线图

# 添加标题和标签
plt.xlabel('Training round')  # x轴标签
plt.ylabel('Accuracy')  # y轴标签

# 显示图例
plt.legend()

plt.tick_params(axis='x', labelsize=12)
plt.tick_params(axis='y', labelsize=12)

# 显示网格
plt.grid(True)

# 显示图表
plt.show()
